package controllers

import (
	"encoding/json"
	"net/http"

	"github.com/shunsuke-tamura/vulnerability-demo/models"
)

func SignInController(w http.ResponseWriter, r *http.Request) {
	CORS(w, r)
	// POST
	if r.Method == http.MethodPost {
		SignInWithNamePass(w, r)
		return
	}
	w.WriteHeader(http.StatusMethodNotAllowed)
}

func SignInWithNamePass(w http.ResponseWriter, r *http.Request) {
	body, err := ReadBody(w, r)
	if err != nil {
		return
	}
	user := models.User{}
	err = json.Unmarshal(body, &user)
	if err != nil {
		w.WriteHeader(http.StatusBadRequest)
		w.Write([]byte(err.Error()))
		return
	}
	var resUser *models.User
	safeF := r.URL.Query().Get("isSafe")
	if safeF == "" || safeF == "true" {
		resUser, err = user.SearchUserByNamePass(true)
	} else {
		resUser, err = user.SearchUserByNamePass(false)
	}
	if err != nil {
		w.WriteHeader(http.StatusInternalServerError)
		w.Write([]byte(err.Error()))
		return
	}
	jsonRes, err := Struct2Json(w, r, resUser)
	if err != nil {
		return
	}
	w.WriteHeader(http.StatusOK)
	w.Write([]byte(*jsonRes))
}
