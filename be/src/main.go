package main

import (
	"log"
	"net/http"

	_ "github.com/go-sql-driver/mysql"
	database "github.com/shunsuke-tamura/vulnerability-demo/db"
	"github.com/shunsuke-tamura/vulnerability-demo/models"
)

func statusCheck(w http.ResponseWriter, r *http.Request) {
	w.WriteHeader(200)
	w.Write([]byte("OK"))
	return
}

func main() {

	database.Init()
	userHandler := func(w http.ResponseWriter, r *http.Request) {

		name := r.URL.Query().Get("name")
		password := r.URL.Query().Get("password")

		user := new(models.User)
		user.Name = name
		user.Password = password
		user.Create()

		origin := r.Header.Get("Origin")
		if origin != "" {
			w.Header().Set("Access-Control-Allow-Origin", origin)
			w.Header().Set("Access-Control-Allow-Credentials", "true")
		} else {
			w.Header().Set("Access-Control-Allow-Origin", "*")
		}
		w.Header().Set("Access-Control-Allow-Headers", "Content-Type")
		w.Header().Set("Access-Control-Allow-Methods", "GET")
	}

	http.HandleFunc("/users", userHandler)
	http.HandleFunc("/ok", statusCheck)

	// start server
	if err := http.ListenAndServe(":8080", nil); err != nil {
		log.Fatal(err)
	}
	defer database.Db.Close()
}
